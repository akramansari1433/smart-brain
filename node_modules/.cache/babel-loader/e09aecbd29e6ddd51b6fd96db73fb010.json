{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akram/Desktop/facerecognitionbrain/src/App.js\";\nimport { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '39d501b8315c4bb68ddbb970a33971df'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {}\n    };\n  }\n\n  render() {\n    const {\n      imageURL\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageURL: imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akram/Desktop/facerecognitionbrain/src/App.js"],"names":["Component","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '39d501b8315c4bb68ddbb970a33971df'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageURL:'',\n      box:{}\n    }\n  }\ncalculateFaceLocation=(data)=>{\n  const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image=document.getElementById('inputimage');\n  const width=Number(image.width);\n  const height=Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height),\n  }\n}\ndisplayFaceBox=(box)=>{\n  this.setState({box:box})\n}\n\n  onInputChange=(event)=>{\n    this.setState({input:event.target.value})\n  }\n\n  onButtonSubmit=()=>{\n    this.setState({imageURL: this.state.input});\n    app.models\n    .predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n      .then((response)=>this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch((err)=>console.log(err));\n  }\n  render(){\n    const { imageURL }= this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n              params={particlesOptions}\n            />\n        <Navigation/>\n        <Logo/>\n        <Rank/>\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageURL={imageURL}/>\n      </div>\n    );\n  \n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
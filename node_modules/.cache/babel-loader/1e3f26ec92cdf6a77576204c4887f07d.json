{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akram/Desktop/facerecognitionbrain/src/App.js\";\nimport { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '39d501b8315c4bb68ddbb970a33971df'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'signin',\n  isSigndeIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: new Date()\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSigndeIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSigndeIn,\n      imageURL,\n      box,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSigndeIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageURL: imageURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akram/Desktop/facerecognitionbrain/src/App.js"],"names":["Component","Particles","Navigation","Logo","ImageLinkForm","Rank","SignIn","Register","FaceRecognition","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageURL","box","route","isSigndeIn","user","id","name","email","entries","joined","Date","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '39d501b8315c4bb68ddbb970a33971df'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState={\n    input:'',\n    imageURL:'',\n    box:{},\n    route:'signin',\n    isSigndeIn:false,\n    user:{\n          id:'',\n          name:'',\n          email:'',\n          entries:0,\n          joined:new Date()\n    }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state=initialState;\n  }\n  loadUser=(data)=>{\n    this.setState({\n      user:{\n            id:data.id,\n            name:data.name,\n            email:data.email,\n            entries:data.entries,\n            joined:data.joined\n          }\n  })\n  }\n\n  calculateFaceLocation=(data)=>{\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image=document.getElementById('inputimage');\n    const width=Number(image.width);\n    const height=Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n  displayFaceBox=(box)=>{\n    console.log(box);\n    this.setState({box:box})\n  }\n\n    onInputChange=(event)=>{\n      this.setState({input:event.target.value})\n    }\n\n    onButtonSubmit=()=>{\n      this.setState({imageURL: this.state.input});\n      app.models\n      .predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n        .then((response)=>{\n          if (response) {\n            fetch('http://localhost:3000/image', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count}))\n\n              })\n  \n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch((err)=>console.log(err));\n    }\n    onRouteChange=(route)=>{\n      if(route ==='signout'){\n        this.setState(initialState)\n      }\n      else if(route==='home'){\n        this.setState({isSigndeIn:true})\n      }\n      this.setState({route:route})\n    }\n    render(){\n      const {isSigndeIn, imageURL,box,route }= this.state;\n      return (\n        <div className=\"App\">\n          <Particles className='particles'\n                params={particlesOptions}\n              />\n          <Navigation isSignedIn={isSigndeIn} onRouteChange={this.onRouteChange}/>\n          {route==='home'\n          ?<div>\n            <Logo/>\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n            <FaceRecognition box={box} imageURL={imageURL}/>\n          </div>\n          :(\n            route==='signin'\n            ?<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}